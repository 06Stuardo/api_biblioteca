Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> query
Rule 1     ignore -> EL
Rule 2     ignore -> LA
Rule 3     ignore -> LOS
Rule 4     ignore -> LAS
Rule 5     ignore -> LO
Rule 6     ignore_opt -> ignore
Rule 7     ignore_opt -> empty
Rule 8     empty -> <empty>
Rule 9     field_list -> STRING
Rule 10    field_list -> field_list COMMA STRING
Rule 11    field_list -> field_list Y STRING
Rule 12    field_list -> field_list COMMA Y STRING
Rule 13    field_table -> field_list DE STRING
Rule 14    field_table -> field_table Y field_list DE STRING
Rule 15    condition -> DONDE condition_list
Rule 16    condition_list -> STRING SEA STRING
Rule 17    condition_list -> condition_list Y STRING SEA STRING
Rule 18    condition_list -> condition_list O STRING SEA STRING
Rule 19    condition_opt -> condition
Rule 20    condition_opt -> empty
Rule 21    query -> SHOW ignore_opt field_table condition_opt
Rule 22    query -> COUNT ignore_opt field_table condition_opt
Rule 23    query -> COUNT STRING
Rule 24    query -> COUNT STRING condition

Terminals, with rules where they appear

COMMA                : 10 12
COUNT                : 22 23 24
DE                   : 13 14
DONDE                : 15
EL                   : 1
LA                   : 2
LAS                  : 4
LO                   : 5
LOS                  : 3
O                    : 18
SEA                  : 16 17 18
SHOW                 : 21
STRING               : 9 10 11 12 13 14 16 16 17 17 18 18 23 24
Y                    : 11 12 14 17
error                : 

Nonterminals, with rules where they appear

condition            : 19 24
condition_list       : 15 17 18
condition_opt        : 21 22
empty                : 7 20
field_list           : 10 11 12 13 14
field_table          : 14 21 22
ignore               : 6
ignore_opt           : 21 22
query                : 0

Parsing method: LALR

state 0

    (0) S' -> . query
    (21) query -> . SHOW ignore_opt field_table condition_opt
    (22) query -> . COUNT ignore_opt field_table condition_opt
    (23) query -> . COUNT STRING
    (24) query -> . COUNT STRING condition

    SHOW            shift and go to state 2
    COUNT           shift and go to state 3

    query                          shift and go to state 1

state 1

    (0) S' -> query .



state 2

    (21) query -> SHOW . ignore_opt field_table condition_opt
    (6) ignore_opt -> . ignore
    (7) ignore_opt -> . empty
    (1) ignore -> . EL
    (2) ignore -> . LA
    (3) ignore -> . LOS
    (4) ignore -> . LAS
    (5) ignore -> . LO
    (8) empty -> .

    EL              shift and go to state 7
    LA              shift and go to state 8
    LOS             shift and go to state 9
    LAS             shift and go to state 10
    LO              shift and go to state 11
    STRING          reduce using rule 8 (empty -> .)

    ignore_opt                     shift and go to state 4
    ignore                         shift and go to state 5
    empty                          shift and go to state 6

state 3

    (22) query -> COUNT . ignore_opt field_table condition_opt
    (23) query -> COUNT . STRING
    (24) query -> COUNT . STRING condition
    (6) ignore_opt -> . ignore
    (7) ignore_opt -> . empty
    (1) ignore -> . EL
    (2) ignore -> . LA
    (3) ignore -> . LOS
    (4) ignore -> . LAS
    (5) ignore -> . LO
    (8) empty -> .

  ! shift/reduce conflict for STRING resolved as shift
    STRING          shift and go to state 13
    EL              shift and go to state 7
    LA              shift and go to state 8
    LOS             shift and go to state 9
    LAS             shift and go to state 10
    LO              shift and go to state 11

  ! STRING          [ reduce using rule 8 (empty -> .) ]

    ignore_opt                     shift and go to state 12
    ignore                         shift and go to state 5
    empty                          shift and go to state 6

state 4

    (21) query -> SHOW ignore_opt . field_table condition_opt
    (13) field_table -> . field_list DE STRING
    (14) field_table -> . field_table Y field_list DE STRING
    (9) field_list -> . STRING
    (10) field_list -> . field_list COMMA STRING
    (11) field_list -> . field_list Y STRING
    (12) field_list -> . field_list COMMA Y STRING

    STRING          shift and go to state 16

    field_table                    shift and go to state 14
    field_list                     shift and go to state 15

state 5

    (6) ignore_opt -> ignore .

    STRING          reduce using rule 6 (ignore_opt -> ignore .)


state 6

    (7) ignore_opt -> empty .

    STRING          reduce using rule 7 (ignore_opt -> empty .)


state 7

    (1) ignore -> EL .

    STRING          reduce using rule 1 (ignore -> EL .)


state 8

    (2) ignore -> LA .

    STRING          reduce using rule 2 (ignore -> LA .)


state 9

    (3) ignore -> LOS .

    STRING          reduce using rule 3 (ignore -> LOS .)


state 10

    (4) ignore -> LAS .

    STRING          reduce using rule 4 (ignore -> LAS .)


state 11

    (5) ignore -> LO .

    STRING          reduce using rule 5 (ignore -> LO .)


state 12

    (22) query -> COUNT ignore_opt . field_table condition_opt
    (13) field_table -> . field_list DE STRING
    (14) field_table -> . field_table Y field_list DE STRING
    (9) field_list -> . STRING
    (10) field_list -> . field_list COMMA STRING
    (11) field_list -> . field_list Y STRING
    (12) field_list -> . field_list COMMA Y STRING

    STRING          shift and go to state 16

    field_table                    shift and go to state 17
    field_list                     shift and go to state 15

state 13

    (23) query -> COUNT STRING .
    (24) query -> COUNT STRING . condition
    (15) condition -> . DONDE condition_list

    $end            reduce using rule 23 (query -> COUNT STRING .)
    DONDE           shift and go to state 19

    condition                      shift and go to state 18

state 14

    (21) query -> SHOW ignore_opt field_table . condition_opt
    (14) field_table -> field_table . Y field_list DE STRING
    (19) condition_opt -> . condition
    (20) condition_opt -> . empty
    (15) condition -> . DONDE condition_list
    (8) empty -> .

    Y               shift and go to state 21
    DONDE           shift and go to state 19
    $end            reduce using rule 8 (empty -> .)

    condition_opt                  shift and go to state 20
    condition                      shift and go to state 22
    empty                          shift and go to state 23

state 15

    (13) field_table -> field_list . DE STRING
    (10) field_list -> field_list . COMMA STRING
    (11) field_list -> field_list . Y STRING
    (12) field_list -> field_list . COMMA Y STRING

    DE              shift and go to state 24
    COMMA           shift and go to state 25
    Y               shift and go to state 26


state 16

    (9) field_list -> STRING .

    DE              reduce using rule 9 (field_list -> STRING .)
    COMMA           reduce using rule 9 (field_list -> STRING .)
    Y               reduce using rule 9 (field_list -> STRING .)


state 17

    (22) query -> COUNT ignore_opt field_table . condition_opt
    (14) field_table -> field_table . Y field_list DE STRING
    (19) condition_opt -> . condition
    (20) condition_opt -> . empty
    (15) condition -> . DONDE condition_list
    (8) empty -> .

    Y               shift and go to state 21
    DONDE           shift and go to state 19
    $end            reduce using rule 8 (empty -> .)

    condition_opt                  shift and go to state 27
    condition                      shift and go to state 22
    empty                          shift and go to state 23

state 18

    (24) query -> COUNT STRING condition .

    $end            reduce using rule 24 (query -> COUNT STRING condition .)


state 19

    (15) condition -> DONDE . condition_list
    (16) condition_list -> . STRING SEA STRING
    (17) condition_list -> . condition_list Y STRING SEA STRING
    (18) condition_list -> . condition_list O STRING SEA STRING

    STRING          shift and go to state 29

    condition_list                 shift and go to state 28

state 20

    (21) query -> SHOW ignore_opt field_table condition_opt .

    $end            reduce using rule 21 (query -> SHOW ignore_opt field_table condition_opt .)


state 21

    (14) field_table -> field_table Y . field_list DE STRING
    (9) field_list -> . STRING
    (10) field_list -> . field_list COMMA STRING
    (11) field_list -> . field_list Y STRING
    (12) field_list -> . field_list COMMA Y STRING

    STRING          shift and go to state 16

    field_list                     shift and go to state 30

state 22

    (19) condition_opt -> condition .

    $end            reduce using rule 19 (condition_opt -> condition .)


state 23

    (20) condition_opt -> empty .

    $end            reduce using rule 20 (condition_opt -> empty .)


state 24

    (13) field_table -> field_list DE . STRING

    STRING          shift and go to state 31


state 25

    (10) field_list -> field_list COMMA . STRING
    (12) field_list -> field_list COMMA . Y STRING

    STRING          shift and go to state 32
    Y               shift and go to state 33


state 26

    (11) field_list -> field_list Y . STRING

    STRING          shift and go to state 34


state 27

    (22) query -> COUNT ignore_opt field_table condition_opt .

    $end            reduce using rule 22 (query -> COUNT ignore_opt field_table condition_opt .)


state 28

    (15) condition -> DONDE condition_list .
    (17) condition_list -> condition_list . Y STRING SEA STRING
    (18) condition_list -> condition_list . O STRING SEA STRING

    $end            reduce using rule 15 (condition -> DONDE condition_list .)
    Y               shift and go to state 35
    O               shift and go to state 36


state 29

    (16) condition_list -> STRING . SEA STRING

    SEA             shift and go to state 37


state 30

    (14) field_table -> field_table Y field_list . DE STRING
    (10) field_list -> field_list . COMMA STRING
    (11) field_list -> field_list . Y STRING
    (12) field_list -> field_list . COMMA Y STRING

    DE              shift and go to state 38
    COMMA           shift and go to state 25
    Y               shift and go to state 26


state 31

    (13) field_table -> field_list DE STRING .

    Y               reduce using rule 13 (field_table -> field_list DE STRING .)
    DONDE           reduce using rule 13 (field_table -> field_list DE STRING .)
    $end            reduce using rule 13 (field_table -> field_list DE STRING .)


state 32

    (10) field_list -> field_list COMMA STRING .

    DE              reduce using rule 10 (field_list -> field_list COMMA STRING .)
    COMMA           reduce using rule 10 (field_list -> field_list COMMA STRING .)
    Y               reduce using rule 10 (field_list -> field_list COMMA STRING .)


state 33

    (12) field_list -> field_list COMMA Y . STRING

    STRING          shift and go to state 39


state 34

    (11) field_list -> field_list Y STRING .

    DE              reduce using rule 11 (field_list -> field_list Y STRING .)
    COMMA           reduce using rule 11 (field_list -> field_list Y STRING .)
    Y               reduce using rule 11 (field_list -> field_list Y STRING .)


state 35

    (17) condition_list -> condition_list Y . STRING SEA STRING

    STRING          shift and go to state 40


state 36

    (18) condition_list -> condition_list O . STRING SEA STRING

    STRING          shift and go to state 41


state 37

    (16) condition_list -> STRING SEA . STRING

    STRING          shift and go to state 42


state 38

    (14) field_table -> field_table Y field_list DE . STRING

    STRING          shift and go to state 43


state 39

    (12) field_list -> field_list COMMA Y STRING .

    DE              reduce using rule 12 (field_list -> field_list COMMA Y STRING .)
    COMMA           reduce using rule 12 (field_list -> field_list COMMA Y STRING .)
    Y               reduce using rule 12 (field_list -> field_list COMMA Y STRING .)


state 40

    (17) condition_list -> condition_list Y STRING . SEA STRING

    SEA             shift and go to state 44


state 41

    (18) condition_list -> condition_list O STRING . SEA STRING

    SEA             shift and go to state 45


state 42

    (16) condition_list -> STRING SEA STRING .

    Y               reduce using rule 16 (condition_list -> STRING SEA STRING .)
    O               reduce using rule 16 (condition_list -> STRING SEA STRING .)
    $end            reduce using rule 16 (condition_list -> STRING SEA STRING .)


state 43

    (14) field_table -> field_table Y field_list DE STRING .

    Y               reduce using rule 14 (field_table -> field_table Y field_list DE STRING .)
    DONDE           reduce using rule 14 (field_table -> field_table Y field_list DE STRING .)
    $end            reduce using rule 14 (field_table -> field_table Y field_list DE STRING .)


state 44

    (17) condition_list -> condition_list Y STRING SEA . STRING

    STRING          shift and go to state 46


state 45

    (18) condition_list -> condition_list O STRING SEA . STRING

    STRING          shift and go to state 47


state 46

    (17) condition_list -> condition_list Y STRING SEA STRING .

    Y               reduce using rule 17 (condition_list -> condition_list Y STRING SEA STRING .)
    O               reduce using rule 17 (condition_list -> condition_list Y STRING SEA STRING .)
    $end            reduce using rule 17 (condition_list -> condition_list Y STRING SEA STRING .)


state 47

    (18) condition_list -> condition_list O STRING SEA STRING .

    Y               reduce using rule 18 (condition_list -> condition_list O STRING SEA STRING .)
    O               reduce using rule 18 (condition_list -> condition_list O STRING SEA STRING .)
    $end            reduce using rule 18 (condition_list -> condition_list O STRING SEA STRING .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for STRING in state 3 resolved as shift
